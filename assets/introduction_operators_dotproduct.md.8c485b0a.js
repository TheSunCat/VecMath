import{_ as n,c as a,o as s,a as p}from"./app.8c51f311.js";const b='{"title":"Dot operator","description":"","frontmatter":{},"headers":[{"level":2,"title":"2D and 3D dot product","slug":"_2d-and-3d-dot-product"},{"level":2,"title":"Quaternion multiplication","slug":"quaternion-multiplication"}],"relativePath":"introduction/operators/dotproduct.md","lastUpdated":1676884101000}',e={},t=p(`<h1 id="dot-operator" tabindex="-1">Dot operator <a class="header-anchor" href="#dot-operator" aria-hidden="true">#</a></h1><p>The dot operator has two different meanings:</p><ol><li>For 2D and 3D vector this operator corresponds to the dot product as you would expect.</li><li>For a quaternion this operator corresponds to the quaternion multiplication.</li></ol><h2 id="_2d-and-3d-dot-product" tabindex="-1">2D and 3D dot product <a class="header-anchor" href="#_2d-and-3d-dot-product" aria-hidden="true">#</a></h2><div class="language-cpp line-numbers-mode"><pre><code>vecmath<span class="token operator">&gt;</span> a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span>
vecmath<span class="token operator">&gt;</span> b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
vecmath<span class="token operator">&gt;</span> dab<span class="token operator">=</span>a<span class="token punctuation">.</span>b
vecmath<span class="token operator">&gt;</span> print dab
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>The result of this operator is off course a scalar:</p><div class="language-cpp line-numbers-mode"><pre><code>dab <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">13</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>A 3D example:</p><div class="language-cpp line-numbers-mode"><pre><code>vecmath<span class="token operator">&gt;</span> a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
vecmath<span class="token operator">&gt;</span> b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span>
vecmath<span class="token operator">&gt;</span> dab<span class="token operator">=</span>a<span class="token punctuation">.</span>b
vecmath<span class="token operator">&gt;</span> print dab
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>The result of this operator is again a scalar:</p><div class="language-cpp line-numbers-mode"><pre><code>dab <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">16</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h2 id="quaternion-multiplication" tabindex="-1">Quaternion multiplication <a class="header-anchor" href="#quaternion-multiplication" aria-hidden="true">#</a></h2><p>The dot operator can be used to perform the quaternion complex multiplication and off course also to calculate a rotation with the sandwich formula. The result of this operator on quaternions is a new quaternion:</p><div class="language-cpp line-numbers-mode"><pre><code>vecmath<span class="token operator">&gt;</span> q1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
vecmath<span class="token operator">&gt;</span> q2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
vecmath<span class="token operator">&gt;</span> q3<span class="token operator">=</span>q1<span class="token punctuation">.</span>q2
vecmath<span class="token operator">&gt;</span> print q3
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>The resulting quaternion is :</p><div class="language-cpp line-numbers-mode"><pre><code>q3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">16</span> <span class="token punctuation">,</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">15</span> <span class="token punctuation">,</span> <span class="token number">40</span> <span class="token punctuation">,</span> <span class="token number">35</span> <span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div>`,16),o=[t];function r(c,l,u,i,d,k){return s(),a("div",null,o)}var h=n(e,[["render",r]]);export{b as __pageData,h as default};
