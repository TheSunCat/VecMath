import{_ as e,c as t,o as a,a as o}from"./app.8c51f311.js";const _='{"title":"Operators","description":"","frontmatter":{},"headers":[],"relativePath":"introduction/operators/operators.md","lastUpdated":1676884101000}',r={},i=o('<h1 id="operators" tabindex="-1">Operators <a class="header-anchor" href="#operators" aria-hidden="true">#</a></h1><p>The set of operators is a bit bigger than the operators in C++, and one main difference is that the XOR symbol (^) has been repurposed as the power operator.</p><p>All but one operator are so called Hadamard operators: (<a href="https://en.wikipedia.org/wiki/Hadamard_product_(matrices)" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Hadamard_product_(matrices)</a>).</p><p>An important detail is that variables can be promoted to other types, for example when a scalar is multiplied with a 2D vector, the x and y component of the 2D vector will be multiplied with the value of the scalar.</p><p>In contrast, when a 2D vector is added to a 3D vector, the z-component of the 2D vector will be considered to be zero.The operators are (in order of precedence):</p><ul><li><p>| | : calculates the magnitude of the variable inside.</p></li><li><p>* : multiplies two variables component wise.</p></li><li><p>/ : divides two variables by each other.</p></li><li><p>. : a special product. For 1d, 2d and 3d vectors this is the sum of the products of the components. For a quaternion, this is the complex multiplication of two quaternions.</p></li><li><p>^ : raises the first variable to the power of the second. The second variable is assumed the be a scalar. (this might be subject to review later).</p></li><li><p>+ : adds two variables together component wise.</p></li><li><p>- : subtracts two variables from each other component wise, or negates all the components of one variable.</p></li></ul><p>Finally, parentheses can be used in the same way as in C++ to group operations together if the order of operations must be different than the default operator precedence</p>',7),s=[i];function p(n,l,d,c,h,m){return a(),t("div",null,s)}var f=e(r,[["render",p]]);export{_ as __pageData,f as default};
